version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: auth-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - auth-network
    restart: unless-stopped
  redis:
    image: redis:7
    container_name: auth-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - auth-network
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
  app:
    build: ./app
    container_name: auth-app
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - SECRET_KEY=${SECRET_KEY}
      - MS_CLIENT_ID=${MS_CLIENT_ID}
      - MS_CLIENT_SECRET=${MS_CLIENT_SECRET}
      - MS_TENANT_ID=${MS_TENANT_ID}
      - NOTIFICATION_EMAIL=${NOTIFICATION_EMAIL}
      - SENDER_EMAIL=${SENDER_EMAIL}
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - auth-network
      - npm_network
    restart: unless-stopped
networks:
  auth-network:
    driver: bridge
  npm_network:
    external: true

volumes:
  postgres-data:
  redis-data: